<?php

namespace ContainerJoxHilX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authenticator_RememberMeHandler_MainService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.authenticator.remember_me_handler.main' shared service.
     *
     * @return \Symfony\Component\Security\Http\RememberMe\PersistentRememberMeHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/RememberMe/RememberMeHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/RememberMe/AbstractRememberMeHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/RememberMe/PersistentRememberMeHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/Authentication/RememberMe/TokenProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/Authentication/RememberMe/TokenVerifierInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/doctrine-bridge/Security/RememberMe/DoctrineTokenProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/Authentication/RememberMe/CacheTokenVerifier.php';

        return $container->privates['security.authenticator.remember_me_handler.main'] = new \Symfony\Component\Security\Http\RememberMe\PersistentRememberMeHandler(new \Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider(($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService())), $container->getEnv('APP_SECRET'), ($container->privates['security.user.provider.concrete.in_database'] ?? $container->load('getSecurity_User_Provider_Concrete_InDatabaseService')), ($container->services['request_stack'] ?? ($container->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ['secret' => $container->getEnv('APP_SECRET'), 'lifetime' => 604800, 'path' => '/', 'httponly' => true, 'secure' => true, 'token_provider' => ['service' => 'Symfony\\Bridge\\Doctrine\\Security\\RememberMe\\DoctrineTokenProvider', 'doctrine' => ['enabled' => false, 'connection' => NULL]], 'user_providers' => [], 'catch_exceptions' => true, 'signature_properties' => [], 'name' => 'REMEMBERME', 'domain' => NULL, 'samesite' => 'lax', 'always_remember_me' => false, 'remember_me_parameter' => '_remember_me'], ($container->privates['monolog.logger.security'] ?? $container->getMonolog_Logger_SecurityService()), new \Symfony\Component\Security\Core\Authentication\RememberMe\CacheTokenVerifier(($container->privates['cache.security_token_verifier'] ?? $container->getCache_SecurityTokenVerifierService()), 60, 'rememberme-main-stale-'));
    }
}
